aliases:
  - &attach-workspace
    at: ~/girlapp

defaults: &defaults
    working_directory: ~/girlapp
    docker:
      - image: circleci/android:api-25-alpha    # https://circleci.com/docs/2.0/circleci-images/#android

version: 2
jobs:
  build:
    <<: *defaults
    environment:
        ADB_INSTALL_TIMEOUT: 60
        JVM_OPTS: -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -XX:ParallelGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2
        GRADLE_OPTS: '-Dorg.gradle.daemon=true -Dorg.gradle.jvmargs="-XX:+HeapDumpOnOutOfMemoryError"'
        _JAVA_OPTIONS: -Xmx3g -Xmx1g
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ .Branch }}-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#      - run:
#         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
#         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
            - ~/.idea
          key: jars-{{ .Branch }}-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

      ### prepare
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - run:
          name: Prepare for Dev Flavor
          command: echo $GOOGLE_SERVICE | base64 --decode --ignore-garbage > app/google-services.json
      - run:
          name: Prepare for Release Flavor
          command: |
            mkdir app/src/release
            echo $RELEASE_GOOGLE_SERVICE | base64 --decode --ignore-garbage > app/src/release/google-services.json
            aws s3 cp s3://girlapp/appbee.jks app/appbee.jks

      ### Test
      - run:
          name: Run Tests
          command: ./gradlew --info --stacktrace --no-daemon --max-workers 2 testDebugUnitTest # connectedAndroidTest
          no_output_timeout: 1200m
#      ### Jacoco Report
#      - run:
#          name: Test Coverage
#          command: ./gradlew coverageReport
      ### Save Artifacts
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
          destination: reports/junit
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples

      ### build
      - run:
          name: Build
          command: ./gradlew assembleDevelopment assembleStaging assembleRelease
          no_output_timeout: 1200m
      - persist_to_workspace:
          root: .
          paths: app/build/outputs
      - store_artifacts:
          path: app/build/outputs

      ### deploy
  dev-deploy:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace: *attach-workspace
      - run:
          name: Delivery to Slack for Dev
          command: bash .circleci/delivery-to-slack.sh release $SLACK_DELIVERY_DEV_CHANNEL $CIRCLE_BRANCH
      - store_artifacts:
          path: app/build/outputs

  release-deploy:
      <<: *defaults
      steps:
        - checkout
        - attach_workspace: *attach-workspace
        - run:
            name: Delivery to Slack for Release
            command: bash .circleci/delivery-to-slack.sh release $SLACK_DELIVERY_RELEASE_CHANNEL $CIRCLE_BRANCH
        - store_artifacts:
            path: app/build/outputs

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - dev-deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - development
      - release-deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - release