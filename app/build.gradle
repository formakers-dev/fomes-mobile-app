apply plugin: 'com.android.application'
apply from: "build-jacoco.gradle"

android {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    compileSdkVersion 25
    buildToolsVersion "25.0.1"
    defaultConfig {
        applicationId "com.appbee.appbeemobile"
        minSdkVersion 22
        targetSdkVersion 25
        multiDexEnabled true
        versionCode 3
        versionName "1.0.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            keyAlias System.getenv("KEY_ALIAS")
            keyPassword System.getenv("KEY_PASSWORD")
            storeFile file(String.valueOf(System.getenv("KEYSTORE")))
            storePassword System.getenv("KEYSTORE_PASSWORD")
        }
    }
    buildTypes {
        debug {
            debuggable true
            testCoverageEnabled true
            buildConfigField 'String', 'SERVER_BASE_URL', '"http://' + InetAddress.getLocalHost().getHostAddress() + ':8080/"';
            buildConfigField 'String', 'YOUTUBE_API_KEY', "${properties.getProperty("YOUTUBE_API_KEY")}";
        }
        development {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'SERVER_BASE_URL', '"http://appbeesvr.herokuapp.com/"';
            buildConfigField 'String', 'YOUTUBE_API_KEY', "${properties.getProperty("YOUTUBE_API_KEY")}";
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'SERVER_BASE_URL', '"http://appbee-server.azurewebsites.net"';
            buildConfigField 'String', 'YOUTUBE_API_KEY', "${properties.getProperty("YOUTUBE_API_KEY")}";
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests.all {
            forkEvery = 5
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
}

android.applicationVariants.all {
    def aptOutputDir = new File(buildDir, "generated/source/apt/${it.unitTestVariant.dirName}")
    it.unitTestVariant.addJavaSourceFoldersToModel(aptOutputDir)
}

android.applicationVariants.all { variant ->
    def productFlavor = variant.productFlavors[0] != null ? "${variant.productFlavors[0].name.capitalize()}" : ""
    def buildType = "${variant.buildType.name.capitalize()}"
    tasks["compile${productFlavor}${buildType}UnitTestSources"].dependsOn(tasks["merge${productFlavor}${buildType}Assets"])
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:design:25.3.1'
    // retrofit
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    // okHttp
    compile 'com.squareup.okhttp3:okhttp:3.8.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    // gson
    compile 'com.google.code.gson:gson:2.8.1'
    // butterknife
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    testAnnotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    // dagger
    compile 'com.google.dagger:dagger:2.11'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.11'
    testAnnotationProcessor 'com.google.dagger:dagger-compiler:2.11'
    // rxJava
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.3.0'
    // guava
    compile 'com.google.guava:guava:23.0-android'
    compile 'com.google.guava:guava:21.0'
    // typekit
    compile 'com.tsengvn:typekit:1.0.1'
    // Glide
    compile 'com.github.bumptech.glide:glide:4.0.0'
    // google auth
    compile 'com.google.android.gms:play-services-auth:11.0.4'
    compile('com.google.api-client:google-api-client:1.23.0') {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
        exclude group: 'com.google.guava', module: 'guava-jdk5'
    }
    compile('com.google.api-client:google-api-client-android:1.23.0') {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
        exclude group: 'com.google.guava', module: 'guava-jdk5'
    }
    compile('com.google.apis:google-api-services-people:v1-rev159-1.23.0') {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
        exclude group: 'com.google.guava', module: 'guava-jdk5'
    }

    // firebase
    compile 'com.google.firebase:firebase-messaging:11.0.4'

    // youtube player api
    compile files('libs/YouTubeAndroidPlayerApi.jar')

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.7.22'
    testCompile 'org.robolectric:robolectric:3.5.1'
    testCompile 'org.robolectric:shadows-support-v4:3.4-rc2'
    testCompile 'org.assertj:assertj-core:3.8.0'
    testCompile 'com.squareup.okhttp:mockwebserver:1.2.1'
    testCompile 'com.google.guava:guava:23.0-android'

    // android test
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}
apply plugin: 'com.google.gms.google-services'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'realm-android'