apply plugin: 'com.android.application'
apply plugin: 'jacoco'

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class',
                      '**/R$*.class',
                      '**/BuildConfig.*',
                      '**/Manifest*.*',
                      '**/*Test*.*',
                      'android/**/*.*',
                      '**/*InjectAdapter*.*',
                      '**/*StaticInjection*.*',
                      '**/*ModuleAdapter*.*',
                        '**/*_Factory.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug/com/appbee/appbeemobile", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"
    defaultConfig {
        applicationId "com.appbee.appbeemobile"
        minSdkVersion 22
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            keyAlias System.getenv("KEY_ALIAS")
            keyPassword System.getenv("KEY_PASSWORD")
            storeFile file(String.valueOf(System.getenv("KEYSTORE")))
            storePassword System.getenv("KEYSTORE_PASSWORD")
        }
    }
    buildTypes {
        debug {
            debuggable true
            testCoverageEnabled true
            buildConfigField 'String', 'SERVER_BASE_URL', '"http://' + InetAddress.getLocalHost().getHostAddress() + ':8080/"';
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'SERVER_BASE_URL', '"http://appbeesvr.herokuapp.com/"';
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests.all {
            forkEvery = 5
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
}

android.applicationVariants.all {
    def aptOutputDir = new File(buildDir, "generated/source/apt/${it.unitTestVariant.dirName}")
    it.unitTestVariant.addJavaSourceFoldersToModel(aptOutputDir)
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:25.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    // retrofit
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    // okHttp
    compile 'com.squareup.okhttp3:okhttp:3.8.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    // gson
    compile 'com.google.code.gson:gson:2.8.1'
    // butterknife
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    testAnnotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    // dagger
    compile 'com.google.dagger:dagger:2.11'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.11'
    testAnnotationProcessor 'com.google.dagger:dagger-compiler:2.11'
    // rxJava
    compile 'io.reactivex:rxandroid:1.2.1'
    // google auth
    compile 'com.google.android.gms:play-services-auth:10.0.1'
    // guava
    compile 'com.google.guava:guava:23.0-android'
    // kakao
    compile 'com.kakao.sdk:kakaolink:1.5.1'
    // typekit
    compile 'com.tsengvn:typekit:1.0.1'
    // Automated Gif
    compile 'pl.droidsonroids.gif:android-gif-drawable:1.2.8'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.7.22'
    testCompile 'org.robolectric:robolectric:3.4.2'
    testCompile 'org.assertj:assertj-core:3.8.0'
    testCompile 'com.squareup.okhttp:mockwebserver:1.2.1'
    testCompile 'com.google.guava:guava:23.0-android'

    // android test
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}
apply plugin: 'com.google.gms.google-services'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'realm-android'